Spring Cloud
------------

It gives you many different libraries for implementing micro service using springs

1. openFegin
		It is used to make REST calls
		
Steps to use openFegin:
-----------------------
 1. Add dependency in pom.xml
 2. Create an interface with method matching signature of remote method
 3. Enable feign client 

 ----------------------------------------
 
 1) we want assign unique name to every microservice and use that name to refer that microservice.
 It is by using
 
 2) Eureke : It service registry and discovery server.
 			Every microservice register itsself with Eureke
 			Eureka server typically runs in port 8761
 			
 			
----------------------------
 	
3) API gateway (9090)

	This is used to navigate calls to microservices.
	All calls are first made to api gateway and then api gateway will route call to repsective microservice.

	Client should never ever call to any microservice directly. Call should be routed through API gateway always.

-----------------------------------

4) Circuit breaker

	Circuit breaker is used in microservices to handle failure of services.
	It is implemented using a library given by spring cloud called known as resilince4j.

-----------------------------------

5) Cloud config server (8888)

It is a centralized application that massage all the application related properties

Eurekaserver
configserver
apigateway
message
display

-------------------------------------------

There are many microservices communicating with each other via APIGATEWAY
Hence there are many calls. Hence it is difficult to debug (to find how calls are executing).
To know this we have to use

6) Sleuth
	IT is used for distributed tracing
	
	ApiGateway ----> displayservice ---> messageservice
	
	TraceId, SpanId
	
add dependency
	
Eurekaserver
configserver
apigateway    	Sleuth
message			Sleuth
display			Sleuth

[servicename,traceId,spanId]

[messageservice,d357259ee83d8da1,221c1d7150b25d4c]
[displayservice,2a276e0426b28085,0031cefac310e834]

This log is generated by sleuth.

But this is on console and going through all the logs for all the service 
on console is difficult and time is consuming task.

-----------------------------------------------

7) Zipkin
	It is server which shows logs in GUI from which are generated by sleuth.
	
	steps:
	run eureka server 8761
	run config server 8888
	run api server 9090
	run message 70721
	run display 7072
	
---------------------------------------------------
Note:

@EnableEurekaClient - is a optional annotation to write on top of client class

	